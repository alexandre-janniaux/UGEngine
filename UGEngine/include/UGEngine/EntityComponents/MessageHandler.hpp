#pragma once

namespace uge {

class Entity;

template <typename T>
class MessageHandler {
public:
	MessageHandler(Entity& entity);

	////////////////////////////////////////////////////////////
	/// Bind a message type to another destination
	////////////////////////////////////////////////////////////
	void bind(MessageHandler<T>& destination);
		
	////////////////////////////////////////////////////////////
	/// Receive message type
	////////////////////////////////////////////////////////////
	virtual void receive(const T&, Entity& source)=0;

	////////////////////////////////////////////////////////////
	Entity& getMessageEntity();
private:
	Entity& m_messageEntity;

};

} // namespace uge

#include <UGEngine/EntityComponents/MessageHandler.ipp>